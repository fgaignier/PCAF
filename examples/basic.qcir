#QCIR-14
free(att_a6_a3, att_a6_a1, att_a6_a2, att_a3_a7, att_a3_a6, att_a3_a9, att_a3_a8, att_a3_a3, att_a7_a8, att_a3_a2, att_a7_a9, att_a3_a5, att_a7_a6, att_a3_a4, att_a7_a7, att_a9_a7, att_a5_a2, att_a9_a6, att_a5_a3, att_a9_a5, att_a9_a4, att_a9_a3, att_a9_a2, att_a9_a1, att_a2_a5, att_a2_a6, att_a6_a9, att_a2_a7, att_a2_a8, att_a2_a1, att_a6_a7, att_a6_a8, att_a2_a2, att_a6_a5, att_a2_a3, att_a6_a6, att_a2_a4, att_a2_a9, att_a8_a6, att_a8_a5, att_a4_a2, att_a8_a4, att_a4_a1, att_a8_a3, att_a8_a2, att_a8_a1, att_a1_a4, att_a1_a5, att_a1_a6, att_a5_a8, att_a1_a7, att_a5_a9, att_a5_a6, att_a1_a1, att_a5_a7, att_a9_a9, att_a1_a2, att_a5_a4, att_a9_a8, att_a1_a3, att_a5_a5, att_a1_a8, att_a1_a9, att_a7_a4, att_a7_a5, att_a3_a1, att_a7_a2, att_a7_a3, att_a7_a1, att_a4_a8, att_a4_a7, att_a4_a9, att_a4_a4, att_a4_a3, att_a8_a9, att_a8_a8, att_a4_a5, att_a8_a7)
exists(on_a9, on_a8, on_a7)
forall(att_a4_a6, att_a6_a4, on_a6, att_a5_a1)
exists(acc_a9, acc_a8, acc_a7, acc_a6, acc_a5, acc_a4, acc_a3, acc_a2, acc_a1)
output(main)
TRUE = and()
disj_a6_a4 = or(att_a6_a4, att_a4_a6)
structure = and(att_a4_a3, att_a3_a1, att_a2_a1, att_a4_a2, att_a8_a5, att_a7_a5, att_a9_a6, att_a8_a6, disj_a6_a4, -att_a4_a4, -att_a4_a9, -att_a4_a1, -att_a4_a8, -att_a4_a5, -att_a4_a7, -att_a6_a6, -att_a6_a9, -att_a6_a3, -att_a6_a1, -att_a6_a8, -att_a6_a2, -att_a6_a5, -att_a6_a7, -att_a9_a4, -att_a9_a9, -att_a9_a3, -att_a9_a1, -att_a9_a8, -att_a9_a2, -att_a9_a5, -att_a9_a7, -att_a3_a4, -att_a3_a6, -att_a3_a9, -att_a3_a3, -att_a3_a8, -att_a3_a2, -att_a3_a5, -att_a3_a7, -att_a1_a4, -att_a1_a6, -att_a1_a9, -att_a1_a3, -att_a1_a1, -att_a1_a8, -att_a1_a2, -att_a1_a5, -att_a1_a7, -att_a8_a4, -att_a8_a9, -att_a8_a3, -att_a8_a1, -att_a8_a8, -att_a8_a2, -att_a8_a7, -att_a2_a4, -att_a2_a6, -att_a2_a9, -att_a2_a3, -att_a2_a8, -att_a2_a2, -att_a2_a5, -att_a2_a7, -att_a5_a4, -att_a5_a6, -att_a5_a9, -att_a5_a3, -att_a5_a8, -att_a5_a2, -att_a5_a5, -att_a5_a7, -att_a7_a4, -att_a7_a6, -att_a7_a9, -att_a7_a3, -att_a7_a1, -att_a7_a8, -att_a7_a2, -att_a7_a7)
impl_a4_a4 = ite(att_a4_a4, -acc_a4, TRUE)
impl_a4_a6 = ite(att_a6_a4, -acc_a6, TRUE)
impl_a4_a9 = ite(att_a9_a4, -acc_a9, TRUE)
impl_a4_a3 = ite(att_a3_a4, -acc_a3, TRUE)
impl_a4_a1 = ite(att_a1_a4, -acc_a1, TRUE)
impl_a4_a8 = ite(att_a8_a4, -acc_a8, TRUE)
impl_a4_a2 = ite(att_a2_a4, -acc_a2, TRUE)
impl_a4_a5 = ite(att_a5_a4, -acc_a5, TRUE)
impl_a4_a7 = ite(att_a7_a4, -acc_a7, TRUE)
conjImpl_a4 = and(impl_a4_a4, impl_a4_a6, impl_a4_a9, impl_a4_a3, impl_a4_a1, impl_a4_a8, impl_a4_a2, impl_a4_a5, impl_a4_a7)
equiv_a4 = xor(-acc_a4, conjImpl_a4)
impl_a3_a4 = ite(att_a4_a3, -acc_a4, TRUE)
impl_a3_a6 = ite(att_a6_a3, -acc_a6, TRUE)
impl_a3_a9 = ite(att_a9_a3, -acc_a9, TRUE)
impl_a3_a3 = ite(att_a3_a3, -acc_a3, TRUE)
impl_a3_a1 = ite(att_a1_a3, -acc_a1, TRUE)
impl_a3_a8 = ite(att_a8_a3, -acc_a8, TRUE)
impl_a3_a2 = ite(att_a2_a3, -acc_a2, TRUE)
impl_a3_a5 = ite(att_a5_a3, -acc_a5, TRUE)
impl_a3_a7 = ite(att_a7_a3, -acc_a7, TRUE)
conjImpl_a3 = and(impl_a3_a4, impl_a3_a6, impl_a3_a9, impl_a3_a3, impl_a3_a1, impl_a3_a8, impl_a3_a2, impl_a3_a5, impl_a3_a7)
equiv_a3 = xor(-acc_a3, conjImpl_a3)
impl_a1_a4 = ite(att_a4_a1, -acc_a4, TRUE)
impl_a1_a6 = ite(att_a6_a1, -acc_a6, TRUE)
impl_a1_a9 = ite(att_a9_a1, -acc_a9, TRUE)
impl_a1_a3 = ite(att_a3_a1, -acc_a3, TRUE)
impl_a1_a1 = ite(att_a1_a1, -acc_a1, TRUE)
impl_a1_a8 = ite(att_a8_a1, -acc_a8, TRUE)
impl_a1_a2 = ite(att_a2_a1, -acc_a2, TRUE)
impl_a1_a5 = ite(att_a5_a1, -acc_a5, TRUE)
impl_a1_a7 = ite(att_a7_a1, -acc_a7, TRUE)
conjImpl_a1 = and(impl_a1_a4, impl_a1_a6, impl_a1_a9, impl_a1_a3, impl_a1_a1, impl_a1_a8, impl_a1_a2, impl_a1_a5, impl_a1_a7)
equiv_a1 = xor(-acc_a1, conjImpl_a1)
impl_a2_a4 = ite(att_a4_a2, -acc_a4, TRUE)
impl_a2_a6 = ite(att_a6_a2, -acc_a6, TRUE)
impl_a2_a9 = ite(att_a9_a2, -acc_a9, TRUE)
impl_a2_a3 = ite(att_a3_a2, -acc_a3, TRUE)
impl_a2_a1 = ite(att_a1_a2, -acc_a1, TRUE)
impl_a2_a8 = ite(att_a8_a2, -acc_a8, TRUE)
impl_a2_a2 = ite(att_a2_a2, -acc_a2, TRUE)
impl_a2_a5 = ite(att_a5_a2, -acc_a5, TRUE)
impl_a2_a7 = ite(att_a7_a2, -acc_a7, TRUE)
conjImpl_a2 = and(impl_a2_a4, impl_a2_a6, impl_a2_a9, impl_a2_a3, impl_a2_a1, impl_a2_a8, impl_a2_a2, impl_a2_a5, impl_a2_a7)
equiv_a2 = xor(-acc_a2, conjImpl_a2)
impl_a5_a4 = ite(att_a4_a5, -acc_a4, TRUE)
impl_a5_a6 = ite(att_a6_a5, -acc_a6, TRUE)
impl_a5_a9 = ite(att_a9_a5, -acc_a9, TRUE)
impl_a5_a3 = ite(att_a3_a5, -acc_a3, TRUE)
impl_a5_a1 = ite(att_a1_a5, -acc_a1, TRUE)
impl_a5_a8 = ite(att_a8_a5, -acc_a8, TRUE)
impl_a5_a2 = ite(att_a2_a5, -acc_a2, TRUE)
impl_a5_a5 = ite(att_a5_a5, -acc_a5, TRUE)
impl_a5_a7 = ite(att_a7_a5, -acc_a7, TRUE)
conjImpl_a5 = and(impl_a5_a4, impl_a5_a6, impl_a5_a9, impl_a5_a3, impl_a5_a1, impl_a5_a8, impl_a5_a2, impl_a5_a5, impl_a5_a7)
equiv_a5 = xor(-acc_a5, conjImpl_a5)
fixed = and(equiv_a4, equiv_a3, equiv_a1, equiv_a2, equiv_a5)
impl_a9_a4 = ite(att_a4_a9, -acc_a4, TRUE)
impl_a9_a6 = ite(att_a6_a9, -acc_a6, TRUE)
impl_a9_a9 = ite(att_a9_a9, -acc_a9, TRUE)
impl_a9_a3 = ite(att_a3_a9, -acc_a3, TRUE)
impl_a9_a1 = ite(att_a1_a9, -acc_a1, TRUE)
impl_a9_a8 = ite(att_a8_a9, -acc_a8, TRUE)
impl_a9_a2 = ite(att_a2_a9, -acc_a2, TRUE)
impl_a9_a5 = ite(att_a5_a9, -acc_a5, TRUE)
impl_a9_a7 = ite(att_a7_a9, -acc_a7, TRUE)
conjImpl_a9 = and(impl_a9_a4, impl_a9_a6, impl_a9_a9, impl_a9_a3, impl_a9_a1, impl_a9_a8, impl_a9_a2, impl_a9_a5, impl_a9_a7, on_a9)
equiv_a9 = xor(-acc_a9, conjImpl_a9)
impl_a8_a4 = ite(att_a4_a8, -acc_a4, TRUE)
impl_a8_a6 = ite(att_a6_a8, -acc_a6, TRUE)
impl_a8_a9 = ite(att_a9_a8, -acc_a9, TRUE)
impl_a8_a3 = ite(att_a3_a8, -acc_a3, TRUE)
impl_a8_a1 = ite(att_a1_a8, -acc_a1, TRUE)
impl_a8_a8 = ite(att_a8_a8, -acc_a8, TRUE)
impl_a8_a2 = ite(att_a2_a8, -acc_a2, TRUE)
impl_a8_a5 = ite(att_a5_a8, -acc_a5, TRUE)
impl_a8_a7 = ite(att_a7_a8, -acc_a7, TRUE)
conjImpl_a8 = and(impl_a8_a4, impl_a8_a6, impl_a8_a9, impl_a8_a3, impl_a8_a1, impl_a8_a8, impl_a8_a2, impl_a8_a5, impl_a8_a7, on_a8)
equiv_a8 = xor(-acc_a8, conjImpl_a8)
impl_a7_a4 = ite(att_a4_a7, -acc_a4, TRUE)
impl_a7_a6 = ite(att_a6_a7, -acc_a6, TRUE)
impl_a7_a9 = ite(att_a9_a7, -acc_a9, TRUE)
impl_a7_a3 = ite(att_a3_a7, -acc_a3, TRUE)
impl_a7_a1 = ite(att_a1_a7, -acc_a1, TRUE)
impl_a7_a8 = ite(att_a8_a7, -acc_a8, TRUE)
impl_a7_a2 = ite(att_a2_a7, -acc_a2, TRUE)
impl_a7_a5 = ite(att_a5_a7, -acc_a5, TRUE)
impl_a7_a7 = ite(att_a7_a7, -acc_a7, TRUE)
conjImpl_a7 = and(impl_a7_a4, impl_a7_a6, impl_a7_a9, impl_a7_a3, impl_a7_a1, impl_a7_a8, impl_a7_a2, impl_a7_a5, impl_a7_a7, on_a7)
equiv_a7 = xor(-acc_a7, conjImpl_a7)
control = and(equiv_a9, equiv_a8, equiv_a7)
impl_a6_a4 = ite(att_a4_a6, -acc_a4, TRUE)
impl_a6_a6 = ite(att_a6_a6, -acc_a6, TRUE)
impl_a6_a9 = ite(att_a9_a6, -acc_a9, TRUE)
impl_a6_a3 = ite(att_a3_a6, -acc_a3, TRUE)
impl_a6_a1 = ite(att_a1_a6, -acc_a1, TRUE)
impl_a6_a8 = ite(att_a8_a6, -acc_a8, TRUE)
impl_a6_a2 = ite(att_a2_a6, -acc_a2, TRUE)
impl_a6_a5 = ite(att_a5_a6, -acc_a5, TRUE)
impl_a6_a7 = ite(att_a7_a6, -acc_a7, TRUE)
conjImpl_a6 = and(impl_a6_a4, impl_a6_a6, impl_a6_a9, impl_a6_a3, impl_a6_a1, impl_a6_a8, impl_a6_a2, impl_a6_a5, impl_a6_a7, on_a6)
equiv_a6 = xor(-acc_a6, conjImpl_a6)
uncertain = and(equiv_a6)
semantics = and(fixed, control, uncertain)
target = and(acc_a1)
phiStCr = and(structure, semantics, target)
excl_a6_a4 = and(-att_a6_a4, -att_a4_a6)
excluded = or(excl_a6_a4)
main = or(phiStCr, excluded)

