#QCIR-14
free(att_e_e, att_c_c, att_a_e, att_c_b, att_b_c, att_c_e, att_e_c, att_e_b, att_b_e, att_a_a, att_c_a, att_a_c, att_b_b, att_b_a, att_a_b)
exists(on_c)
forall(on_e, att_e_a)
exists(acc_c, acc_b, acc_e, acc_a)
output(main)
TRUE = and()
structure = and(att_b_a, att_a_b, att_c_e, -att_c_c, -att_c_a, -att_c_b, -att_e_c, -att_e_e, -att_e_b, -att_a_c, -att_a_e, -att_a_a, -att_b_c, -att_b_e, -att_b_b)
impl_a_c = ite(att_c_a, -acc_c, TRUE)
impl_a_e = ite(att_e_a, -acc_e, TRUE)
impl_a_a = ite(att_a_a, -acc_a, TRUE)
impl_a_b = ite(att_b_a, -acc_b, TRUE)
conjImpl_a = and(impl_a_c, impl_a_e, impl_a_a, impl_a_b)
equiv_a = xor(-acc_a, conjImpl_a)
impl_b_c = ite(att_c_b, -acc_c, TRUE)
impl_b_e = ite(att_e_b, -acc_e, TRUE)
impl_b_a = ite(att_a_b, -acc_a, TRUE)
impl_b_b = ite(att_b_b, -acc_b, TRUE)
conjImpl_b = and(impl_b_c, impl_b_e, impl_b_a, impl_b_b)
equiv_b = xor(-acc_b, conjImpl_b)
fixed = and(equiv_a, equiv_b)
impl_c_c = ite(att_c_c, -acc_c, TRUE)
impl_c_e = ite(att_e_c, -acc_e, TRUE)
impl_c_a = ite(att_a_c, -acc_a, TRUE)
impl_c_b = ite(att_b_c, -acc_b, TRUE)
conjImpl_c = and(impl_c_c, impl_c_e, impl_c_a, impl_c_b, on_c)
equiv_c = xor(-acc_c, conjImpl_c)
control = and(equiv_c)
impl_e_c = ite(att_c_e, -acc_c, TRUE)
impl_e_e = ite(att_e_e, -acc_e, TRUE)
impl_e_a = ite(att_a_e, -acc_a, TRUE)
impl_e_b = ite(att_b_e, -acc_b, TRUE)
conjImpl_e = and(impl_e_c, impl_e_e, impl_e_a, impl_e_b, on_e)
equiv_e = xor(-acc_e, conjImpl_e)
uncertain = and(equiv_e)
semantics = and(fixed, control, uncertain)
target = and(acc_a)
phiStCr = and(structure, semantics, target)
main = or(phiStCr)

