#QCIR-14
free(att_E2_RTP, att_SC1_RTP, att_E2_SHAPING, att_RTP_RTP, att_E3_ADAPTING, att_M2_ADAPTING, att_E2_E3, att_E2_E4, att_E5_SHAPING, att_M4_SHAPING, att_E2_E1, att_E2_E2, att_ADAPTING_ADAPTING, att_E2_E5, att_E5_SC5, att_M4_SC6, att_E5_SC6, att_SHAPING_M1, att_M4_SC7, att_E5_SC7, att_SC1_SHAPING, att_E5_M4, att_E5_SC1, att_SHAPING_M4, att_M4_SC2, att_E5_SC2, att_M4_SC3, att_SHAPING_M2, att_E5_SC3, att_M4_SC4, att_E5_SC4, att_SHAPING_M3, att_M4_SC5, att_SC4_ADAPTING, att_M4_SC1, att_E5_M3, att_E5_M2, att_E5_M1, att_SC7_SC5, att_SC7_SC2, att_SC7_SC3, att_SC7_SC1, att_E5_ADAPTING, att_E1_E1, att_M4_RTP, att_E1_E3, att_E1_E2, att_E1_E5, att_E1_E4, att_M4_ADAPTING, att_SC4_RTP, att_E4_M4, att_E4_M3, att_E5_RTP, att_E4_M2, att_E4_M1, att_SC7_SC7, att_M1_SHAPING, att_SC6_M1, att_SC6_ADAPTING, att_SC6_M4, att_SC6_M2, att_SC6_M3, att_E2_SC5, att_E2_SC4, att_E2_SC7, att_E2_SC6, att_M3_E5, att_SC3_E4, att_M3_E4, att_SC3_E3, att_M3_E3, att_SHAPING_SHAPING, att_SC3_E5, att_M3_E2, att_E2_SC1, att_E2_SC3, att_E2_SC2, att_RTP_E1, att_M3_E1, att_RTP_E3, att_RTP_E2, att_SC3_E2, att_RTP_E5, att_SC3_E1, att_RTP_E4, att_SC6_SHAPING, att_E4_SC6, att_E4_SC7, att_E4_SC4, att_E4_SC5, att_E4_SC2, att_E4_SC3, att_E3_E4, att_E3_E5, att_E3_E2, att_SC7_ADAPTING, att_E3_E3, att_SC3_SC1, att_M1_SC3, att_M1_SC4, att_M1_SC1, att_M1_SC2, att_SC3_SC7, att_M1_SC7, att_E4_SC1, att_SC4_M4, att_M1_SC5, att_M4_M4, att_M1_SC6, att_M4_M3, att_SC3_SC3, att_SC3_SC2, att_SC3_SC5, att_SC4_M1, att_M4_M2, att_M4_M1, att_SC4_M3, att_M2_SHAPING, att_SC4_M2, att_SHAPING_ADAPTING, att_M1_E2, att_SC1_E1, att_E1_M1, att_M1_E3, att_SC1_E2, att_SC1_E3, att_E1_M3, att_M1_E1, att_SC1_E4, att_E1_M2, att_SC1_E5, att_E1_M4, att_M1_E4, att_M1_E5, att_SC3_SHAPING, att_ADAPTING_M4, att_M1_ADAPTING, att_SC5_RTP, att_SC5_M3, att_SC5_M4, att_SC5_M1, att_SC5_M2, att_RTP_ADAPTING, att_ADAPTING_M1, att_ADAPTING_M3, att_ADAPTING_M2, att_M2_E3, att_SC2_E3, att_M2_E4, att_SC2_E2, att_M2_E1, att_SC2_E5, att_M2_E2, att_SC2_E4, att_M2_E5, att_SC2_E1, att_M1_RTP, att_SC4_SC5, att_SC4_SC6, att_E4_RTP, att_SC4_SC7, att_SC4_SC1, att_SC4_SC2, att_SC4_SC3, att_SC4_SC4, att_E3_E1, att_SC7_E2, att_SC7_E1, att_SC7_E5, att_SC7_E4, att_SC7_E3, att_SC2_SC2, att_SC2_SC1, att_M3_M1, att_SC3_M2, att_SC3_M1, att_E3_SC2, att_E3_SC1, att_SC2_SC7, att_SC2_SC5, att_SC2_SC3, att_E2_M3, att_E2_M4, att_E2_M1, att_E3_SC7, att_E2_M2, att_E3_SC6, att_E3_SC5, att_E3_SC4, att_E3_SC3, att_RTP_SHAPING, att_SC3_RTP, att_E4_ADAPTING, att_M2_SC1, att_M2_SC2, att_M2_SC3, att_M2_SC4, att_M2_SC5, att_M2_SC6, att_M2_SC7, att_SC3_ADAPTING, att_SC5_E5, att_E5_E3, att_E5_E2, att_E5_E1, att_SHAPING_E1, att_SHAPING_E4, att_SC5_E3, att_SHAPING_E5, att_SC5_E4, att_SHAPING_E2, att_SC5_E1, att_SHAPING_E3, att_SC5_E2, att_SC5_SHAPING, att_E2_ADAPTING, att_M2_RTP, att_E4_E2, att_E4_E1, att_E3_SHAPING, att_SC6_E1, att_SC6_E4, att_SC6_E5, att_SC6_E2, att_SC6_E3, att_E4_E5, att_E4_E4, att_E4_E3, att_RTP_M1, att_RTP_M3, att_RTP_M2, att_SC2_SHAPING, att_SC6_RTP, att_RTP_M4, att_SC5_SC2, att_SC3_M4, att_SC1_ADAPTING, att_SC5_SC3, att_SC3_M3, att_M3_M4, att_M3_M3, att_M3_M2, att_SC5_SC1, att_SC5_SC6, att_E3_RTP, att_SC5_SC7, att_SC5_SC4, att_SC5_SC5, att_SC7_M2, att_SC7_M1, att_ADAPTING_RTP, att_SC7_M4, att_SC7_M3, att_SC4_E5, att_M4_E5, att_SC4_E4, att_M4_E4, att_E1_RTP, att_M4_E3, att_SC4_E1, att_M4_E2, att_M4_E1, att_SC4_E3, att_SC4_E2, att_SHAPING_RTP, att_M3_SC7, att_M3_SC5, att_M3_SC6, att_M3_SC3, att_M3_SC4, att_M3_SC1, att_M3_SC2, att_SC1_SC5, att_SC1_SC4, att_SC1_SC7, att_SC1_SC6, att_SC2_RTP, att_M1_M2, att_SC1_M1, att_M1_M3, att_SC1_M2, att_SC1_M3, att_M1_M1, att_SC1_M4, att_SC1_SC1, att_SC1_SC3, att_M1_M4, att_SC1_SC2, att_SC7_SHAPING, att_ADAPTING_E1, att_ADAPTING_E3, att_ADAPTING_E2, att_SHAPING_SC7, att_SHAPING_SC6, att_SHAPING_SC5, att_SC6_SC1, att_E5_E5, att_SHAPING_SC4, att_E5_E4, att_SC6_SC2, att_SHAPING_SC3, att_SC6_SC3, att_SHAPING_SC2, att_SC6_SC4, att_SHAPING_SC1, att_SC6_SC5, att_SC6_SC6, att_SC6_SC7, att_SC5_ADAPTING, att_SC2_ADAPTING, att_M2_M3, att_ADAPTING_E5, att_SC2_M3, att_M2_M4, att_ADAPTING_E4, att_SC2_M2, att_M2_M1, att_M2_M2, att_SC2_M4, att_E1_SHAPING, att_M3_RTP, att_E1_SC4, att_E1_SC3, att_E1_SC2, att_E1_ADAPTING, att_SC2_M1, att_E1_SC1, att_ADAPTING_SC4, att_ADAPTING_SC3, att_ADAPTING_SC2, att_M3_SHAPING, att_ADAPTING_SC1, att_ADAPTING_SC7, att_ADAPTING_SC6, att_E4_SHAPING, att_ADAPTING_SC5, att_E3_M4, att_RTP_SC7, att_E3_M2, att_E3_M3, att_SC7_RTP, att_M3_ADAPTING, att_ADAPTING_SHAPING, att_RTP_SC1, att_E1_SC7, att_RTP_SC2, att_E1_SC6, att_E1_SC5, att_SC4_SHAPING, att_RTP_SC5, att_RTP_SC6, att_E3_M1, att_RTP_SC3, att_RTP_SC4)
exists(on_M4, on_M3, on_M2, on_M1)
forall(on_E4, att_SC7_SC4, on_E3, on_E2, on_E1, att_SC3_SC6, att_SC2_SC6, att_SC2_SC4, att_SC7_SC6, on_E5, att_SC3_SC4)
exists(acc_M4, acc_SC7, acc_SC6, acc_M3, acc_M2, acc_ADAPTING, acc_M1, acc_SC1, acc_E5, acc_E4, acc_E3, acc_SC5, acc_E2, acc_E1, acc_SC4, acc_SC3, acc_SC2, acc_SHAPING, acc_RTP)
output(main)
TRUE = and()
structure = and(att_SC1_SC3, att_E3_SC7, att_ADAPTING_SHAPING, att_SC5_SC2, att_E5_E3, att_SC5_SC7, att_SC2_SC5, att_SC1_SC6, att_SC7_RTP, att_SC1_SC7, att_E1_SC7, att_SC3_RTP, att_SC6_SC5, att_RTP_ADAPTING, att_SC5_ADAPTING, att_E3_SC3, att_SC7_SC5, att_E3_E4, att_SC7_SC3, att_E4_SC1, att_E5_SC2, att_SC1_SC2, att_E1_SC2, att_SC2_SC1, att_E3_SC6, att_SC2_SC7, att_E5_SC7, att_SC4_SC1, att_SC5_SHAPING, att_SC2_RTP, att_E2_E3, att_E4_SC2, att_E5_SC1, att_ADAPTING_RTP, att_SC3_SC5, att_E2_SC6, att_SC3_SC1, att_SC3_SC7, att_SC7_SC1, att_E3_E2, att_E5_SC6, att_E3_SC4, att_E4_E3, att_SC1_ADAPTING, att_SC6_SC1, att_SHAPING_ADAPTING, att_SC1_SHAPING, att_E4_SC7, att_SC7_ADAPTING, att_E3_SC5, att_E2_SC7, att_SHAPING_RTP, att_E5_SC4, att_E2_SC2, att_E1_SC6, att_SC6_RTP, att_E2_SC4, att_SC5_SC3, att_SC4_RTP, att_E3_E5, att_SC2_SHAPING, att_RTP_SHAPING, att_SC5_SC6, att_SC4_SC5, att_SC7_SC2, att_SC5_SC4, att_SC3_SHAPING, att_SC1_SC4, att_M2_E2, att_M2_E3, att_M3_E5, att_ADAPTING_M3, att_M4_E1, att_RTP_M3, att_M4_E5, att_SHAPING_M2, att_RTP_M4, att_SHAPING_M1, att_M1_E3, att_M1_E1, att_M3_E1, att_ADAPTING_M2, att_M3_E4, att_RTP_M1, att_M4_E4, -att_M2_M2, -att_M2_M1, -att_M2_SC1, -att_M2_SC3, -att_M2_E5, -att_M2_SC6, -att_M2_RTP, -att_M2_ADAPTING, -att_M2_E1, -att_M2_E4, -att_M2_M3, -att_M2_SHAPING, -att_M2_SC5, -att_M2_SC4, -att_M2_M4, -att_M2_SC7, -att_M2_SC2, -att_M1_M2, -att_M1_M1, -att_M1_SC1, -att_M1_SC3, -att_M1_E5, -att_M1_SC6, -att_M1_RTP, -att_M1_ADAPTING, -att_M1_E4, -att_M1_M3, -att_M1_SHAPING, -att_M1_SC5, -att_M1_SC4, -att_M1_M4, -att_M1_SC7, -att_M1_SC2, -att_M1_E2, -att_SC1_M2, -att_SC1_M1, -att_SC1_SC1, -att_SC1_E5, -att_SC1_RTP, -att_SC1_E1, -att_SC1_E4, -att_SC1_M3, -att_SC1_SC5, -att_SC1_E3, -att_SC1_M4, -att_SC1_E2, -att_SC3_M2, -att_SC3_M1, -att_SC3_SC3, -att_SC3_E5, -att_SC3_ADAPTING, -att_SC3_E1, -att_SC3_E4, -att_SC3_M3, -att_SC3_E3, -att_SC3_M4, -att_SC3_SC2, -att_SC3_E2, -att_E5_M2, -att_E5_M1, -att_E5_SC3, -att_E5_E5, -att_E5_RTP, -att_E5_ADAPTING, -att_E5_E1, -att_E5_E4, -att_E5_M3, -att_E5_SHAPING, -att_E5_SC5, -att_E5_M4, -att_E5_E2, -att_SC6_M2, -att_SC6_M1, -att_SC6_SC3, -att_SC6_E5, -att_SC6_SC6, -att_SC6_ADAPTING, -att_SC6_E1, -att_SC6_E4, -att_SC6_M3, -att_SC6_SHAPING, -att_SC6_SC4, -att_SC6_E3, -att_SC6_M4, -att_SC6_SC7, -att_SC6_SC2, -att_SC6_E2, -att_RTP_M2, -att_RTP_SC1, -att_RTP_SC3, -att_RTP_E5, -att_RTP_SC6, -att_RTP_RTP, -att_RTP_E1, -att_RTP_E4, -att_RTP_SC5, -att_RTP_SC4, -att_RTP_E3, -att_RTP_SC7, -att_RTP_SC2, -att_RTP_E2, -att_ADAPTING_M1, -att_ADAPTING_SC1, -att_ADAPTING_SC3, -att_ADAPTING_E5, -att_ADAPTING_SC6, -att_ADAPTING_ADAPTING, -att_ADAPTING_E1, -att_ADAPTING_E4, -att_ADAPTING_SC5, -att_ADAPTING_SC4, -att_ADAPTING_E3, -att_ADAPTING_M4, -att_ADAPTING_SC7, -att_ADAPTING_SC2, -att_ADAPTING_E2, -att_E1_M2, -att_E1_M1, -att_E1_SC1, -att_E1_SC3, -att_E1_E5, -att_E1_RTP, -att_E1_ADAPTING, -att_E1_E1, -att_E1_E4, -att_E1_M3, -att_E1_SHAPING, -att_E1_SC5, -att_E1_SC4, -att_E1_E3, -att_E1_M4, -att_E1_E2, -att_E4_M2, -att_E4_M1, -att_E4_SC3, -att_E4_E5, -att_E4_SC6, -att_E4_RTP, -att_E4_ADAPTING, -att_E4_E1, -att_E4_E4, -att_E4_M3, -att_E4_SHAPING, -att_E4_SC5, -att_E4_SC4, -att_E4_M4, -att_E4_E2, -att_M3_M2, -att_M3_M1, -att_M3_SC1, -att_M3_SC3, -att_M3_SC6, -att_M3_RTP, -att_M3_ADAPTING, -att_M3_M3, -att_M3_SHAPING, -att_M3_SC5, -att_M3_SC4, -att_M3_E3, -att_M3_M4, -att_M3_SC7, -att_M3_SC2, -att_M3_E2, -att_SHAPING_SC1, -att_SHAPING_SC3, -att_SHAPING_E5, -att_SHAPING_SC6, -att_SHAPING_E1, -att_SHAPING_E4, -att_SHAPING_M3, -att_SHAPING_SHAPING, -att_SHAPING_SC5, -att_SHAPING_SC4, -att_SHAPING_E3, -att_SHAPING_M4, -att_SHAPING_SC7, -att_SHAPING_SC2, -att_SHAPING_E2, -att_SC5_M2, -att_SC5_M1, -att_SC5_SC1, -att_SC5_E5, -att_SC5_RTP, -att_SC5_E1, -att_SC5_E4, -att_SC5_M3, -att_SC5_SC5, -att_SC5_E3, -att_SC5_M4, -att_SC5_E2, -att_SC4_M2, -att_SC4_M1, -att_SC4_SC3, -att_SC4_E5, -att_SC4_SC6, -att_SC4_ADAPTING, -att_SC4_E1, -att_SC4_E4, -att_SC4_M3, -att_SC4_SHAPING, -att_SC4_SC4, -att_SC4_E3, -att_SC4_M4, -att_SC4_SC7, -att_SC4_SC2, -att_SC4_E2, -att_E3_M2, -att_E3_M1, -att_E3_SC1, -att_E3_RTP, -att_E3_ADAPTING, -att_E3_E1, -att_E3_M3, -att_E3_SHAPING, -att_E3_E3, -att_E3_M4, -att_E3_SC2, -att_M4_M2, -att_M4_M1, -att_M4_SC1, -att_M4_SC3, -att_M4_SC6, -att_M4_RTP, -att_M4_ADAPTING, -att_M4_M3, -att_M4_SHAPING, -att_M4_SC5, -att_M4_SC4, -att_M4_E3, -att_M4_M4, -att_M4_SC7, -att_M4_SC2, -att_M4_E2, -att_SC7_M2, -att_SC7_M1, -att_SC7_E5, -att_SC7_E1, -att_SC7_E4, -att_SC7_M3, -att_SC7_SHAPING, -att_SC7_E3, -att_SC7_M4, -att_SC7_SC7, -att_SC7_E2, -att_SC2_M2, -att_SC2_M1, -att_SC2_SC3, -att_SC2_E5, -att_SC2_ADAPTING, -att_SC2_E1, -att_SC2_E4, -att_SC2_M3, -att_SC2_E3, -att_SC2_M4, -att_SC2_SC2, -att_SC2_E2, -att_E2_M2, -att_E2_M1, -att_E2_SC1, -att_E2_SC3, -att_E2_E5, -att_E2_RTP, -att_E2_ADAPTING, -att_E2_E1, -att_E2_E4, -att_E2_M3, -att_E2_SHAPING, -att_E2_SC5, -att_E2_M4, -att_E2_E2)
impl_SC1_M2 = ite(att_M2_SC1, -acc_M2, TRUE)
impl_SC1_M1 = ite(att_M1_SC1, -acc_M1, TRUE)
impl_SC1_SC1 = ite(att_SC1_SC1, -acc_SC1, TRUE)
impl_SC1_SC3 = ite(att_SC3_SC1, -acc_SC3, TRUE)
impl_SC1_E5 = ite(att_E5_SC1, -acc_E5, TRUE)
impl_SC1_SC6 = ite(att_SC6_SC1, -acc_SC6, TRUE)
impl_SC1_RTP = ite(att_RTP_SC1, -acc_RTP, TRUE)
impl_SC1_ADAPTING = ite(att_ADAPTING_SC1, -acc_ADAPTING, TRUE)
impl_SC1_E1 = ite(att_E1_SC1, -acc_E1, TRUE)
impl_SC1_E4 = ite(att_E4_SC1, -acc_E4, TRUE)
impl_SC1_M3 = ite(att_M3_SC1, -acc_M3, TRUE)
impl_SC1_SHAPING = ite(att_SHAPING_SC1, -acc_SHAPING, TRUE)
impl_SC1_SC5 = ite(att_SC5_SC1, -acc_SC5, TRUE)
impl_SC1_SC4 = ite(att_SC4_SC1, -acc_SC4, TRUE)
impl_SC1_E3 = ite(att_E3_SC1, -acc_E3, TRUE)
impl_SC1_M4 = ite(att_M4_SC1, -acc_M4, TRUE)
impl_SC1_SC7 = ite(att_SC7_SC1, -acc_SC7, TRUE)
impl_SC1_SC2 = ite(att_SC2_SC1, -acc_SC2, TRUE)
impl_SC1_E2 = ite(att_E2_SC1, -acc_E2, TRUE)
conjImpl_SC1 = and(impl_SC1_M2, impl_SC1_M1, impl_SC1_SC1, impl_SC1_SC3, impl_SC1_E5, impl_SC1_SC6, impl_SC1_RTP, impl_SC1_ADAPTING, impl_SC1_E1, impl_SC1_E4, impl_SC1_M3, impl_SC1_SHAPING, impl_SC1_SC5, impl_SC1_SC4, impl_SC1_E3, impl_SC1_M4, impl_SC1_SC7, impl_SC1_SC2, impl_SC1_E2)
equiv_SC1 = xor(-acc_SC1, conjImpl_SC1)
impl_SC3_M2 = ite(att_M2_SC3, -acc_M2, TRUE)
impl_SC3_M1 = ite(att_M1_SC3, -acc_M1, TRUE)
impl_SC3_SC1 = ite(att_SC1_SC3, -acc_SC1, TRUE)
impl_SC3_SC3 = ite(att_SC3_SC3, -acc_SC3, TRUE)
impl_SC3_E5 = ite(att_E5_SC3, -acc_E5, TRUE)
impl_SC3_SC6 = ite(att_SC6_SC3, -acc_SC6, TRUE)
impl_SC3_RTP = ite(att_RTP_SC3, -acc_RTP, TRUE)
impl_SC3_ADAPTING = ite(att_ADAPTING_SC3, -acc_ADAPTING, TRUE)
impl_SC3_E1 = ite(att_E1_SC3, -acc_E1, TRUE)
impl_SC3_E4 = ite(att_E4_SC3, -acc_E4, TRUE)
impl_SC3_M3 = ite(att_M3_SC3, -acc_M3, TRUE)
impl_SC3_SHAPING = ite(att_SHAPING_SC3, -acc_SHAPING, TRUE)
impl_SC3_SC5 = ite(att_SC5_SC3, -acc_SC5, TRUE)
impl_SC3_SC4 = ite(att_SC4_SC3, -acc_SC4, TRUE)
impl_SC3_E3 = ite(att_E3_SC3, -acc_E3, TRUE)
impl_SC3_M4 = ite(att_M4_SC3, -acc_M4, TRUE)
impl_SC3_SC7 = ite(att_SC7_SC3, -acc_SC7, TRUE)
impl_SC3_SC2 = ite(att_SC2_SC3, -acc_SC2, TRUE)
impl_SC3_E2 = ite(att_E2_SC3, -acc_E2, TRUE)
conjImpl_SC3 = and(impl_SC3_M2, impl_SC3_M1, impl_SC3_SC1, impl_SC3_SC3, impl_SC3_E5, impl_SC3_SC6, impl_SC3_RTP, impl_SC3_ADAPTING, impl_SC3_E1, impl_SC3_E4, impl_SC3_M3, impl_SC3_SHAPING, impl_SC3_SC5, impl_SC3_SC4, impl_SC3_E3, impl_SC3_M4, impl_SC3_SC7, impl_SC3_SC2, impl_SC3_E2)
equiv_SC3 = xor(-acc_SC3, conjImpl_SC3)
impl_SC6_M2 = ite(att_M2_SC6, -acc_M2, TRUE)
impl_SC6_M1 = ite(att_M1_SC6, -acc_M1, TRUE)
impl_SC6_SC1 = ite(att_SC1_SC6, -acc_SC1, TRUE)
impl_SC6_SC3 = ite(att_SC3_SC6, -acc_SC3, TRUE)
impl_SC6_E5 = ite(att_E5_SC6, -acc_E5, TRUE)
impl_SC6_SC6 = ite(att_SC6_SC6, -acc_SC6, TRUE)
impl_SC6_RTP = ite(att_RTP_SC6, -acc_RTP, TRUE)
impl_SC6_ADAPTING = ite(att_ADAPTING_SC6, -acc_ADAPTING, TRUE)
impl_SC6_E1 = ite(att_E1_SC6, -acc_E1, TRUE)
impl_SC6_E4 = ite(att_E4_SC6, -acc_E4, TRUE)
impl_SC6_M3 = ite(att_M3_SC6, -acc_M3, TRUE)
impl_SC6_SHAPING = ite(att_SHAPING_SC6, -acc_SHAPING, TRUE)
impl_SC6_SC5 = ite(att_SC5_SC6, -acc_SC5, TRUE)
impl_SC6_SC4 = ite(att_SC4_SC6, -acc_SC4, TRUE)
impl_SC6_E3 = ite(att_E3_SC6, -acc_E3, TRUE)
impl_SC6_M4 = ite(att_M4_SC6, -acc_M4, TRUE)
impl_SC6_SC7 = ite(att_SC7_SC6, -acc_SC7, TRUE)
impl_SC6_SC2 = ite(att_SC2_SC6, -acc_SC2, TRUE)
impl_SC6_E2 = ite(att_E2_SC6, -acc_E2, TRUE)
conjImpl_SC6 = and(impl_SC6_M2, impl_SC6_M1, impl_SC6_SC1, impl_SC6_SC3, impl_SC6_E5, impl_SC6_SC6, impl_SC6_RTP, impl_SC6_ADAPTING, impl_SC6_E1, impl_SC6_E4, impl_SC6_M3, impl_SC6_SHAPING, impl_SC6_SC5, impl_SC6_SC4, impl_SC6_E3, impl_SC6_M4, impl_SC6_SC7, impl_SC6_SC2, impl_SC6_E2)
equiv_SC6 = xor(-acc_SC6, conjImpl_SC6)
impl_RTP_M2 = ite(att_M2_RTP, -acc_M2, TRUE)
impl_RTP_M1 = ite(att_M1_RTP, -acc_M1, TRUE)
impl_RTP_SC1 = ite(att_SC1_RTP, -acc_SC1, TRUE)
impl_RTP_SC3 = ite(att_SC3_RTP, -acc_SC3, TRUE)
impl_RTP_E5 = ite(att_E5_RTP, -acc_E5, TRUE)
impl_RTP_SC6 = ite(att_SC6_RTP, -acc_SC6, TRUE)
impl_RTP_RTP = ite(att_RTP_RTP, -acc_RTP, TRUE)
impl_RTP_ADAPTING = ite(att_ADAPTING_RTP, -acc_ADAPTING, TRUE)
impl_RTP_E1 = ite(att_E1_RTP, -acc_E1, TRUE)
impl_RTP_E4 = ite(att_E4_RTP, -acc_E4, TRUE)
impl_RTP_M3 = ite(att_M3_RTP, -acc_M3, TRUE)
impl_RTP_SHAPING = ite(att_SHAPING_RTP, -acc_SHAPING, TRUE)
impl_RTP_SC5 = ite(att_SC5_RTP, -acc_SC5, TRUE)
impl_RTP_SC4 = ite(att_SC4_RTP, -acc_SC4, TRUE)
impl_RTP_E3 = ite(att_E3_RTP, -acc_E3, TRUE)
impl_RTP_M4 = ite(att_M4_RTP, -acc_M4, TRUE)
impl_RTP_SC7 = ite(att_SC7_RTP, -acc_SC7, TRUE)
impl_RTP_SC2 = ite(att_SC2_RTP, -acc_SC2, TRUE)
impl_RTP_E2 = ite(att_E2_RTP, -acc_E2, TRUE)
conjImpl_RTP = and(impl_RTP_M2, impl_RTP_M1, impl_RTP_SC1, impl_RTP_SC3, impl_RTP_E5, impl_RTP_SC6, impl_RTP_RTP, impl_RTP_ADAPTING, impl_RTP_E1, impl_RTP_E4, impl_RTP_M3, impl_RTP_SHAPING, impl_RTP_SC5, impl_RTP_SC4, impl_RTP_E3, impl_RTP_M4, impl_RTP_SC7, impl_RTP_SC2, impl_RTP_E2)
equiv_RTP = xor(-acc_RTP, conjImpl_RTP)
impl_ADAPTING_M2 = ite(att_M2_ADAPTING, -acc_M2, TRUE)
impl_ADAPTING_M1 = ite(att_M1_ADAPTING, -acc_M1, TRUE)
impl_ADAPTING_SC1 = ite(att_SC1_ADAPTING, -acc_SC1, TRUE)
impl_ADAPTING_SC3 = ite(att_SC3_ADAPTING, -acc_SC3, TRUE)
impl_ADAPTING_E5 = ite(att_E5_ADAPTING, -acc_E5, TRUE)
impl_ADAPTING_SC6 = ite(att_SC6_ADAPTING, -acc_SC6, TRUE)
impl_ADAPTING_RTP = ite(att_RTP_ADAPTING, -acc_RTP, TRUE)
impl_ADAPTING_ADAPTING = ite(att_ADAPTING_ADAPTING, -acc_ADAPTING, TRUE)
impl_ADAPTING_E1 = ite(att_E1_ADAPTING, -acc_E1, TRUE)
impl_ADAPTING_E4 = ite(att_E4_ADAPTING, -acc_E4, TRUE)
impl_ADAPTING_M3 = ite(att_M3_ADAPTING, -acc_M3, TRUE)
impl_ADAPTING_SHAPING = ite(att_SHAPING_ADAPTING, -acc_SHAPING, TRUE)
impl_ADAPTING_SC5 = ite(att_SC5_ADAPTING, -acc_SC5, TRUE)
impl_ADAPTING_SC4 = ite(att_SC4_ADAPTING, -acc_SC4, TRUE)
impl_ADAPTING_E3 = ite(att_E3_ADAPTING, -acc_E3, TRUE)
impl_ADAPTING_M4 = ite(att_M4_ADAPTING, -acc_M4, TRUE)
impl_ADAPTING_SC7 = ite(att_SC7_ADAPTING, -acc_SC7, TRUE)
impl_ADAPTING_SC2 = ite(att_SC2_ADAPTING, -acc_SC2, TRUE)
impl_ADAPTING_E2 = ite(att_E2_ADAPTING, -acc_E2, TRUE)
conjImpl_ADAPTING = and(impl_ADAPTING_M2, impl_ADAPTING_M1, impl_ADAPTING_SC1, impl_ADAPTING_SC3, impl_ADAPTING_E5, impl_ADAPTING_SC6, impl_ADAPTING_RTP, impl_ADAPTING_ADAPTING, impl_ADAPTING_E1, impl_ADAPTING_E4, impl_ADAPTING_M3, impl_ADAPTING_SHAPING, impl_ADAPTING_SC5, impl_ADAPTING_SC4, impl_ADAPTING_E3, impl_ADAPTING_M4, impl_ADAPTING_SC7, impl_ADAPTING_SC2, impl_ADAPTING_E2)
equiv_ADAPTING = xor(-acc_ADAPTING, conjImpl_ADAPTING)
impl_SHAPING_M2 = ite(att_M2_SHAPING, -acc_M2, TRUE)
impl_SHAPING_M1 = ite(att_M1_SHAPING, -acc_M1, TRUE)
impl_SHAPING_SC1 = ite(att_SC1_SHAPING, -acc_SC1, TRUE)
impl_SHAPING_SC3 = ite(att_SC3_SHAPING, -acc_SC3, TRUE)
impl_SHAPING_E5 = ite(att_E5_SHAPING, -acc_E5, TRUE)
impl_SHAPING_SC6 = ite(att_SC6_SHAPING, -acc_SC6, TRUE)
impl_SHAPING_RTP = ite(att_RTP_SHAPING, -acc_RTP, TRUE)
impl_SHAPING_ADAPTING = ite(att_ADAPTING_SHAPING, -acc_ADAPTING, TRUE)
impl_SHAPING_E1 = ite(att_E1_SHAPING, -acc_E1, TRUE)
impl_SHAPING_E4 = ite(att_E4_SHAPING, -acc_E4, TRUE)
impl_SHAPING_M3 = ite(att_M3_SHAPING, -acc_M3, TRUE)
impl_SHAPING_SHAPING = ite(att_SHAPING_SHAPING, -acc_SHAPING, TRUE)
impl_SHAPING_SC5 = ite(att_SC5_SHAPING, -acc_SC5, TRUE)
impl_SHAPING_SC4 = ite(att_SC4_SHAPING, -acc_SC4, TRUE)
impl_SHAPING_E3 = ite(att_E3_SHAPING, -acc_E3, TRUE)
impl_SHAPING_M4 = ite(att_M4_SHAPING, -acc_M4, TRUE)
impl_SHAPING_SC7 = ite(att_SC7_SHAPING, -acc_SC7, TRUE)
impl_SHAPING_SC2 = ite(att_SC2_SHAPING, -acc_SC2, TRUE)
impl_SHAPING_E2 = ite(att_E2_SHAPING, -acc_E2, TRUE)
conjImpl_SHAPING = and(impl_SHAPING_M2, impl_SHAPING_M1, impl_SHAPING_SC1, impl_SHAPING_SC3, impl_SHAPING_E5, impl_SHAPING_SC6, impl_SHAPING_RTP, impl_SHAPING_ADAPTING, impl_SHAPING_E1, impl_SHAPING_E4, impl_SHAPING_M3, impl_SHAPING_SHAPING, impl_SHAPING_SC5, impl_SHAPING_SC4, impl_SHAPING_E3, impl_SHAPING_M4, impl_SHAPING_SC7, impl_SHAPING_SC2, impl_SHAPING_E2)
equiv_SHAPING = xor(-acc_SHAPING, conjImpl_SHAPING)
impl_SC5_M2 = ite(att_M2_SC5, -acc_M2, TRUE)
impl_SC5_M1 = ite(att_M1_SC5, -acc_M1, TRUE)
impl_SC5_SC1 = ite(att_SC1_SC5, -acc_SC1, TRUE)
impl_SC5_SC3 = ite(att_SC3_SC5, -acc_SC3, TRUE)
impl_SC5_E5 = ite(att_E5_SC5, -acc_E5, TRUE)
impl_SC5_SC6 = ite(att_SC6_SC5, -acc_SC6, TRUE)
impl_SC5_RTP = ite(att_RTP_SC5, -acc_RTP, TRUE)
impl_SC5_ADAPTING = ite(att_ADAPTING_SC5, -acc_ADAPTING, TRUE)
impl_SC5_E1 = ite(att_E1_SC5, -acc_E1, TRUE)
impl_SC5_E4 = ite(att_E4_SC5, -acc_E4, TRUE)
impl_SC5_M3 = ite(att_M3_SC5, -acc_M3, TRUE)
impl_SC5_SHAPING = ite(att_SHAPING_SC5, -acc_SHAPING, TRUE)
impl_SC5_SC5 = ite(att_SC5_SC5, -acc_SC5, TRUE)
impl_SC5_SC4 = ite(att_SC4_SC5, -acc_SC4, TRUE)
impl_SC5_E3 = ite(att_E3_SC5, -acc_E3, TRUE)
impl_SC5_M4 = ite(att_M4_SC5, -acc_M4, TRUE)
impl_SC5_SC7 = ite(att_SC7_SC5, -acc_SC7, TRUE)
impl_SC5_SC2 = ite(att_SC2_SC5, -acc_SC2, TRUE)
impl_SC5_E2 = ite(att_E2_SC5, -acc_E2, TRUE)
conjImpl_SC5 = and(impl_SC5_M2, impl_SC5_M1, impl_SC5_SC1, impl_SC5_SC3, impl_SC5_E5, impl_SC5_SC6, impl_SC5_RTP, impl_SC5_ADAPTING, impl_SC5_E1, impl_SC5_E4, impl_SC5_M3, impl_SC5_SHAPING, impl_SC5_SC5, impl_SC5_SC4, impl_SC5_E3, impl_SC5_M4, impl_SC5_SC7, impl_SC5_SC2, impl_SC5_E2)
equiv_SC5 = xor(-acc_SC5, conjImpl_SC5)
impl_SC7_M2 = ite(att_M2_SC7, -acc_M2, TRUE)
impl_SC7_M1 = ite(att_M1_SC7, -acc_M1, TRUE)
impl_SC7_SC1 = ite(att_SC1_SC7, -acc_SC1, TRUE)
impl_SC7_SC3 = ite(att_SC3_SC7, -acc_SC3, TRUE)
impl_SC7_E5 = ite(att_E5_SC7, -acc_E5, TRUE)
impl_SC7_SC6 = ite(att_SC6_SC7, -acc_SC6, TRUE)
impl_SC7_RTP = ite(att_RTP_SC7, -acc_RTP, TRUE)
impl_SC7_ADAPTING = ite(att_ADAPTING_SC7, -acc_ADAPTING, TRUE)
impl_SC7_E1 = ite(att_E1_SC7, -acc_E1, TRUE)
impl_SC7_E4 = ite(att_E4_SC7, -acc_E4, TRUE)
impl_SC7_M3 = ite(att_M3_SC7, -acc_M3, TRUE)
impl_SC7_SHAPING = ite(att_SHAPING_SC7, -acc_SHAPING, TRUE)
impl_SC7_SC5 = ite(att_SC5_SC7, -acc_SC5, TRUE)
impl_SC7_SC4 = ite(att_SC4_SC7, -acc_SC4, TRUE)
impl_SC7_E3 = ite(att_E3_SC7, -acc_E3, TRUE)
impl_SC7_M4 = ite(att_M4_SC7, -acc_M4, TRUE)
impl_SC7_SC7 = ite(att_SC7_SC7, -acc_SC7, TRUE)
impl_SC7_SC2 = ite(att_SC2_SC7, -acc_SC2, TRUE)
impl_SC7_E2 = ite(att_E2_SC7, -acc_E2, TRUE)
conjImpl_SC7 = and(impl_SC7_M2, impl_SC7_M1, impl_SC7_SC1, impl_SC7_SC3, impl_SC7_E5, impl_SC7_SC6, impl_SC7_RTP, impl_SC7_ADAPTING, impl_SC7_E1, impl_SC7_E4, impl_SC7_M3, impl_SC7_SHAPING, impl_SC7_SC5, impl_SC7_SC4, impl_SC7_E3, impl_SC7_M4, impl_SC7_SC7, impl_SC7_SC2, impl_SC7_E2)
equiv_SC7 = xor(-acc_SC7, conjImpl_SC7)
impl_SC2_M2 = ite(att_M2_SC2, -acc_M2, TRUE)
impl_SC2_M1 = ite(att_M1_SC2, -acc_M1, TRUE)
impl_SC2_SC1 = ite(att_SC1_SC2, -acc_SC1, TRUE)
impl_SC2_SC3 = ite(att_SC3_SC2, -acc_SC3, TRUE)
impl_SC2_E5 = ite(att_E5_SC2, -acc_E5, TRUE)
impl_SC2_SC6 = ite(att_SC6_SC2, -acc_SC6, TRUE)
impl_SC2_RTP = ite(att_RTP_SC2, -acc_RTP, TRUE)
impl_SC2_ADAPTING = ite(att_ADAPTING_SC2, -acc_ADAPTING, TRUE)
impl_SC2_E1 = ite(att_E1_SC2, -acc_E1, TRUE)
impl_SC2_E4 = ite(att_E4_SC2, -acc_E4, TRUE)
impl_SC2_M3 = ite(att_M3_SC2, -acc_M3, TRUE)
impl_SC2_SHAPING = ite(att_SHAPING_SC2, -acc_SHAPING, TRUE)
impl_SC2_SC5 = ite(att_SC5_SC2, -acc_SC5, TRUE)
impl_SC2_SC4 = ite(att_SC4_SC2, -acc_SC4, TRUE)
impl_SC2_E3 = ite(att_E3_SC2, -acc_E3, TRUE)
impl_SC2_M4 = ite(att_M4_SC2, -acc_M4, TRUE)
impl_SC2_SC7 = ite(att_SC7_SC2, -acc_SC7, TRUE)
impl_SC2_SC2 = ite(att_SC2_SC2, -acc_SC2, TRUE)
impl_SC2_E2 = ite(att_E2_SC2, -acc_E2, TRUE)
conjImpl_SC2 = and(impl_SC2_M2, impl_SC2_M1, impl_SC2_SC1, impl_SC2_SC3, impl_SC2_E5, impl_SC2_SC6, impl_SC2_RTP, impl_SC2_ADAPTING, impl_SC2_E1, impl_SC2_E4, impl_SC2_M3, impl_SC2_SHAPING, impl_SC2_SC5, impl_SC2_SC4, impl_SC2_E3, impl_SC2_M4, impl_SC2_SC7, impl_SC2_SC2, impl_SC2_E2)
equiv_SC2 = xor(-acc_SC2, conjImpl_SC2)
impl_SC4_M2 = ite(att_M2_SC4, -acc_M2, TRUE)
impl_SC4_M1 = ite(att_M1_SC4, -acc_M1, TRUE)
impl_SC4_SC1 = ite(att_SC1_SC4, -acc_SC1, TRUE)
impl_SC4_SC3 = ite(att_SC3_SC4, -acc_SC3, TRUE)
impl_SC4_E5 = ite(att_E5_SC4, -acc_E5, TRUE)
impl_SC4_SC6 = ite(att_SC6_SC4, -acc_SC6, TRUE)
impl_SC4_RTP = ite(att_RTP_SC4, -acc_RTP, TRUE)
impl_SC4_ADAPTING = ite(att_ADAPTING_SC4, -acc_ADAPTING, TRUE)
impl_SC4_E1 = ite(att_E1_SC4, -acc_E1, TRUE)
impl_SC4_E4 = ite(att_E4_SC4, -acc_E4, TRUE)
impl_SC4_M3 = ite(att_M3_SC4, -acc_M3, TRUE)
impl_SC4_SHAPING = ite(att_SHAPING_SC4, -acc_SHAPING, TRUE)
impl_SC4_SC5 = ite(att_SC5_SC4, -acc_SC5, TRUE)
impl_SC4_SC4 = ite(att_SC4_SC4, -acc_SC4, TRUE)
impl_SC4_E3 = ite(att_E3_SC4, -acc_E3, TRUE)
impl_SC4_M4 = ite(att_M4_SC4, -acc_M4, TRUE)
impl_SC4_SC7 = ite(att_SC7_SC4, -acc_SC7, TRUE)
impl_SC4_SC2 = ite(att_SC2_SC4, -acc_SC2, TRUE)
impl_SC4_E2 = ite(att_E2_SC4, -acc_E2, TRUE)
conjImpl_SC4 = and(impl_SC4_M2, impl_SC4_M1, impl_SC4_SC1, impl_SC4_SC3, impl_SC4_E5, impl_SC4_SC6, impl_SC4_RTP, impl_SC4_ADAPTING, impl_SC4_E1, impl_SC4_E4, impl_SC4_M3, impl_SC4_SHAPING, impl_SC4_SC5, impl_SC4_SC4, impl_SC4_E3, impl_SC4_M4, impl_SC4_SC7, impl_SC4_SC2, impl_SC4_E2)
equiv_SC4 = xor(-acc_SC4, conjImpl_SC4)
fixed = and(equiv_SC1, equiv_SC3, equiv_SC6, equiv_RTP, equiv_ADAPTING, equiv_SHAPING, equiv_SC5, equiv_SC7, equiv_SC2, equiv_SC4)
impl_M2_M2 = ite(att_M2_M2, -acc_M2, TRUE)
impl_M2_M1 = ite(att_M1_M2, -acc_M1, TRUE)
impl_M2_SC1 = ite(att_SC1_M2, -acc_SC1, TRUE)
impl_M2_SC3 = ite(att_SC3_M2, -acc_SC3, TRUE)
impl_M2_E5 = ite(att_E5_M2, -acc_E5, TRUE)
impl_M2_SC6 = ite(att_SC6_M2, -acc_SC6, TRUE)
impl_M2_RTP = ite(att_RTP_M2, -acc_RTP, TRUE)
impl_M2_ADAPTING = ite(att_ADAPTING_M2, -acc_ADAPTING, TRUE)
impl_M2_E1 = ite(att_E1_M2, -acc_E1, TRUE)
impl_M2_E4 = ite(att_E4_M2, -acc_E4, TRUE)
impl_M2_M3 = ite(att_M3_M2, -acc_M3, TRUE)
impl_M2_SHAPING = ite(att_SHAPING_M2, -acc_SHAPING, TRUE)
impl_M2_SC5 = ite(att_SC5_M2, -acc_SC5, TRUE)
impl_M2_SC4 = ite(att_SC4_M2, -acc_SC4, TRUE)
impl_M2_E3 = ite(att_E3_M2, -acc_E3, TRUE)
impl_M2_M4 = ite(att_M4_M2, -acc_M4, TRUE)
impl_M2_SC7 = ite(att_SC7_M2, -acc_SC7, TRUE)
impl_M2_SC2 = ite(att_SC2_M2, -acc_SC2, TRUE)
impl_M2_E2 = ite(att_E2_M2, -acc_E2, TRUE)
conjImpl_M2 = and(impl_M2_M2, impl_M2_M1, impl_M2_SC1, impl_M2_SC3, impl_M2_E5, impl_M2_SC6, impl_M2_RTP, impl_M2_ADAPTING, impl_M2_E1, impl_M2_E4, impl_M2_M3, impl_M2_SHAPING, impl_M2_SC5, impl_M2_SC4, impl_M2_E3, impl_M2_M4, impl_M2_SC7, impl_M2_SC2, impl_M2_E2, on_M2)
equiv_M2 = xor(-acc_M2, conjImpl_M2)
impl_M1_M2 = ite(att_M2_M1, -acc_M2, TRUE)
impl_M1_M1 = ite(att_M1_M1, -acc_M1, TRUE)
impl_M1_SC1 = ite(att_SC1_M1, -acc_SC1, TRUE)
impl_M1_SC3 = ite(att_SC3_M1, -acc_SC3, TRUE)
impl_M1_E5 = ite(att_E5_M1, -acc_E5, TRUE)
impl_M1_SC6 = ite(att_SC6_M1, -acc_SC6, TRUE)
impl_M1_RTP = ite(att_RTP_M1, -acc_RTP, TRUE)
impl_M1_ADAPTING = ite(att_ADAPTING_M1, -acc_ADAPTING, TRUE)
impl_M1_E1 = ite(att_E1_M1, -acc_E1, TRUE)
impl_M1_E4 = ite(att_E4_M1, -acc_E4, TRUE)
impl_M1_M3 = ite(att_M3_M1, -acc_M3, TRUE)
impl_M1_SHAPING = ite(att_SHAPING_M1, -acc_SHAPING, TRUE)
impl_M1_SC5 = ite(att_SC5_M1, -acc_SC5, TRUE)
impl_M1_SC4 = ite(att_SC4_M1, -acc_SC4, TRUE)
impl_M1_E3 = ite(att_E3_M1, -acc_E3, TRUE)
impl_M1_M4 = ite(att_M4_M1, -acc_M4, TRUE)
impl_M1_SC7 = ite(att_SC7_M1, -acc_SC7, TRUE)
impl_M1_SC2 = ite(att_SC2_M1, -acc_SC2, TRUE)
impl_M1_E2 = ite(att_E2_M1, -acc_E2, TRUE)
conjImpl_M1 = and(impl_M1_M2, impl_M1_M1, impl_M1_SC1, impl_M1_SC3, impl_M1_E5, impl_M1_SC6, impl_M1_RTP, impl_M1_ADAPTING, impl_M1_E1, impl_M1_E4, impl_M1_M3, impl_M1_SHAPING, impl_M1_SC5, impl_M1_SC4, impl_M1_E3, impl_M1_M4, impl_M1_SC7, impl_M1_SC2, impl_M1_E2, on_M1)
equiv_M1 = xor(-acc_M1, conjImpl_M1)
impl_M4_M2 = ite(att_M2_M4, -acc_M2, TRUE)
impl_M4_M1 = ite(att_M1_M4, -acc_M1, TRUE)
impl_M4_SC1 = ite(att_SC1_M4, -acc_SC1, TRUE)
impl_M4_SC3 = ite(att_SC3_M4, -acc_SC3, TRUE)
impl_M4_E5 = ite(att_E5_M4, -acc_E5, TRUE)
impl_M4_SC6 = ite(att_SC6_M4, -acc_SC6, TRUE)
impl_M4_RTP = ite(att_RTP_M4, -acc_RTP, TRUE)
impl_M4_ADAPTING = ite(att_ADAPTING_M4, -acc_ADAPTING, TRUE)
impl_M4_E1 = ite(att_E1_M4, -acc_E1, TRUE)
impl_M4_E4 = ite(att_E4_M4, -acc_E4, TRUE)
impl_M4_M3 = ite(att_M3_M4, -acc_M3, TRUE)
impl_M4_SHAPING = ite(att_SHAPING_M4, -acc_SHAPING, TRUE)
impl_M4_SC5 = ite(att_SC5_M4, -acc_SC5, TRUE)
impl_M4_SC4 = ite(att_SC4_M4, -acc_SC4, TRUE)
impl_M4_E3 = ite(att_E3_M4, -acc_E3, TRUE)
impl_M4_M4 = ite(att_M4_M4, -acc_M4, TRUE)
impl_M4_SC7 = ite(att_SC7_M4, -acc_SC7, TRUE)
impl_M4_SC2 = ite(att_SC2_M4, -acc_SC2, TRUE)
impl_M4_E2 = ite(att_E2_M4, -acc_E2, TRUE)
conjImpl_M4 = and(impl_M4_M2, impl_M4_M1, impl_M4_SC1, impl_M4_SC3, impl_M4_E5, impl_M4_SC6, impl_M4_RTP, impl_M4_ADAPTING, impl_M4_E1, impl_M4_E4, impl_M4_M3, impl_M4_SHAPING, impl_M4_SC5, impl_M4_SC4, impl_M4_E3, impl_M4_M4, impl_M4_SC7, impl_M4_SC2, impl_M4_E2, on_M4)
equiv_M4 = xor(-acc_M4, conjImpl_M4)
impl_M3_M2 = ite(att_M2_M3, -acc_M2, TRUE)
impl_M3_M1 = ite(att_M1_M3, -acc_M1, TRUE)
impl_M3_SC1 = ite(att_SC1_M3, -acc_SC1, TRUE)
impl_M3_SC3 = ite(att_SC3_M3, -acc_SC3, TRUE)
impl_M3_E5 = ite(att_E5_M3, -acc_E5, TRUE)
impl_M3_SC6 = ite(att_SC6_M3, -acc_SC6, TRUE)
impl_M3_RTP = ite(att_RTP_M3, -acc_RTP, TRUE)
impl_M3_ADAPTING = ite(att_ADAPTING_M3, -acc_ADAPTING, TRUE)
impl_M3_E1 = ite(att_E1_M3, -acc_E1, TRUE)
impl_M3_E4 = ite(att_E4_M3, -acc_E4, TRUE)
impl_M3_M3 = ite(att_M3_M3, -acc_M3, TRUE)
impl_M3_SHAPING = ite(att_SHAPING_M3, -acc_SHAPING, TRUE)
impl_M3_SC5 = ite(att_SC5_M3, -acc_SC5, TRUE)
impl_M3_SC4 = ite(att_SC4_M3, -acc_SC4, TRUE)
impl_M3_E3 = ite(att_E3_M3, -acc_E3, TRUE)
impl_M3_M4 = ite(att_M4_M3, -acc_M4, TRUE)
impl_M3_SC7 = ite(att_SC7_M3, -acc_SC7, TRUE)
impl_M3_SC2 = ite(att_SC2_M3, -acc_SC2, TRUE)
impl_M3_E2 = ite(att_E2_M3, -acc_E2, TRUE)
conjImpl_M3 = and(impl_M3_M2, impl_M3_M1, impl_M3_SC1, impl_M3_SC3, impl_M3_E5, impl_M3_SC6, impl_M3_RTP, impl_M3_ADAPTING, impl_M3_E1, impl_M3_E4, impl_M3_M3, impl_M3_SHAPING, impl_M3_SC5, impl_M3_SC4, impl_M3_E3, impl_M3_M4, impl_M3_SC7, impl_M3_SC2, impl_M3_E2, on_M3)
equiv_M3 = xor(-acc_M3, conjImpl_M3)
control = and(equiv_M2, equiv_M1, equiv_M4, equiv_M3)
impl_E3_M2 = ite(att_M2_E3, -acc_M2, TRUE)
impl_E3_M1 = ite(att_M1_E3, -acc_M1, TRUE)
impl_E3_SC1 = ite(att_SC1_E3, -acc_SC1, TRUE)
impl_E3_SC3 = ite(att_SC3_E3, -acc_SC3, TRUE)
impl_E3_E5 = ite(att_E5_E3, -acc_E5, TRUE)
impl_E3_SC6 = ite(att_SC6_E3, -acc_SC6, TRUE)
impl_E3_RTP = ite(att_RTP_E3, -acc_RTP, TRUE)
impl_E3_ADAPTING = ite(att_ADAPTING_E3, -acc_ADAPTING, TRUE)
impl_E3_E1 = ite(att_E1_E3, -acc_E1, TRUE)
impl_E3_E4 = ite(att_E4_E3, -acc_E4, TRUE)
impl_E3_M3 = ite(att_M3_E3, -acc_M3, TRUE)
impl_E3_SHAPING = ite(att_SHAPING_E3, -acc_SHAPING, TRUE)
impl_E3_SC5 = ite(att_SC5_E3, -acc_SC5, TRUE)
impl_E3_SC4 = ite(att_SC4_E3, -acc_SC4, TRUE)
impl_E3_E3 = ite(att_E3_E3, -acc_E3, TRUE)
impl_E3_M4 = ite(att_M4_E3, -acc_M4, TRUE)
impl_E3_SC7 = ite(att_SC7_E3, -acc_SC7, TRUE)
impl_E3_SC2 = ite(att_SC2_E3, -acc_SC2, TRUE)
impl_E3_E2 = ite(att_E2_E3, -acc_E2, TRUE)
conjImpl_E3 = and(impl_E3_M2, impl_E3_M1, impl_E3_SC1, impl_E3_SC3, impl_E3_E5, impl_E3_SC6, impl_E3_RTP, impl_E3_ADAPTING, impl_E3_E1, impl_E3_E4, impl_E3_M3, impl_E3_SHAPING, impl_E3_SC5, impl_E3_SC4, impl_E3_E3, impl_E3_M4, impl_E3_SC7, impl_E3_SC2, impl_E3_E2, on_E3)
equiv_E3 = xor(-acc_E3, conjImpl_E3)
impl_E5_M2 = ite(att_M2_E5, -acc_M2, TRUE)
impl_E5_M1 = ite(att_M1_E5, -acc_M1, TRUE)
impl_E5_SC1 = ite(att_SC1_E5, -acc_SC1, TRUE)
impl_E5_SC3 = ite(att_SC3_E5, -acc_SC3, TRUE)
impl_E5_E5 = ite(att_E5_E5, -acc_E5, TRUE)
impl_E5_SC6 = ite(att_SC6_E5, -acc_SC6, TRUE)
impl_E5_RTP = ite(att_RTP_E5, -acc_RTP, TRUE)
impl_E5_ADAPTING = ite(att_ADAPTING_E5, -acc_ADAPTING, TRUE)
impl_E5_E1 = ite(att_E1_E5, -acc_E1, TRUE)
impl_E5_E4 = ite(att_E4_E5, -acc_E4, TRUE)
impl_E5_M3 = ite(att_M3_E5, -acc_M3, TRUE)
impl_E5_SHAPING = ite(att_SHAPING_E5, -acc_SHAPING, TRUE)
impl_E5_SC5 = ite(att_SC5_E5, -acc_SC5, TRUE)
impl_E5_SC4 = ite(att_SC4_E5, -acc_SC4, TRUE)
impl_E5_E3 = ite(att_E3_E5, -acc_E3, TRUE)
impl_E5_M4 = ite(att_M4_E5, -acc_M4, TRUE)
impl_E5_SC7 = ite(att_SC7_E5, -acc_SC7, TRUE)
impl_E5_SC2 = ite(att_SC2_E5, -acc_SC2, TRUE)
impl_E5_E2 = ite(att_E2_E5, -acc_E2, TRUE)
conjImpl_E5 = and(impl_E5_M2, impl_E5_M1, impl_E5_SC1, impl_E5_SC3, impl_E5_E5, impl_E5_SC6, impl_E5_RTP, impl_E5_ADAPTING, impl_E5_E1, impl_E5_E4, impl_E5_M3, impl_E5_SHAPING, impl_E5_SC5, impl_E5_SC4, impl_E5_E3, impl_E5_M4, impl_E5_SC7, impl_E5_SC2, impl_E5_E2, on_E5)
equiv_E5 = xor(-acc_E5, conjImpl_E5)
impl_E1_M2 = ite(att_M2_E1, -acc_M2, TRUE)
impl_E1_M1 = ite(att_M1_E1, -acc_M1, TRUE)
impl_E1_SC1 = ite(att_SC1_E1, -acc_SC1, TRUE)
impl_E1_SC3 = ite(att_SC3_E1, -acc_SC3, TRUE)
impl_E1_E5 = ite(att_E5_E1, -acc_E5, TRUE)
impl_E1_SC6 = ite(att_SC6_E1, -acc_SC6, TRUE)
impl_E1_RTP = ite(att_RTP_E1, -acc_RTP, TRUE)
impl_E1_ADAPTING = ite(att_ADAPTING_E1, -acc_ADAPTING, TRUE)
impl_E1_E1 = ite(att_E1_E1, -acc_E1, TRUE)
impl_E1_E4 = ite(att_E4_E1, -acc_E4, TRUE)
impl_E1_M3 = ite(att_M3_E1, -acc_M3, TRUE)
impl_E1_SHAPING = ite(att_SHAPING_E1, -acc_SHAPING, TRUE)
impl_E1_SC5 = ite(att_SC5_E1, -acc_SC5, TRUE)
impl_E1_SC4 = ite(att_SC4_E1, -acc_SC4, TRUE)
impl_E1_E3 = ite(att_E3_E1, -acc_E3, TRUE)
impl_E1_M4 = ite(att_M4_E1, -acc_M4, TRUE)
impl_E1_SC7 = ite(att_SC7_E1, -acc_SC7, TRUE)
impl_E1_SC2 = ite(att_SC2_E1, -acc_SC2, TRUE)
impl_E1_E2 = ite(att_E2_E1, -acc_E2, TRUE)
conjImpl_E1 = and(impl_E1_M2, impl_E1_M1, impl_E1_SC1, impl_E1_SC3, impl_E1_E5, impl_E1_SC6, impl_E1_RTP, impl_E1_ADAPTING, impl_E1_E1, impl_E1_E4, impl_E1_M3, impl_E1_SHAPING, impl_E1_SC5, impl_E1_SC4, impl_E1_E3, impl_E1_M4, impl_E1_SC7, impl_E1_SC2, impl_E1_E2, on_E1)
equiv_E1 = xor(-acc_E1, conjImpl_E1)
impl_E4_M2 = ite(att_M2_E4, -acc_M2, TRUE)
impl_E4_M1 = ite(att_M1_E4, -acc_M1, TRUE)
impl_E4_SC1 = ite(att_SC1_E4, -acc_SC1, TRUE)
impl_E4_SC3 = ite(att_SC3_E4, -acc_SC3, TRUE)
impl_E4_E5 = ite(att_E5_E4, -acc_E5, TRUE)
impl_E4_SC6 = ite(att_SC6_E4, -acc_SC6, TRUE)
impl_E4_RTP = ite(att_RTP_E4, -acc_RTP, TRUE)
impl_E4_ADAPTING = ite(att_ADAPTING_E4, -acc_ADAPTING, TRUE)
impl_E4_E1 = ite(att_E1_E4, -acc_E1, TRUE)
impl_E4_E4 = ite(att_E4_E4, -acc_E4, TRUE)
impl_E4_M3 = ite(att_M3_E4, -acc_M3, TRUE)
impl_E4_SHAPING = ite(att_SHAPING_E4, -acc_SHAPING, TRUE)
impl_E4_SC5 = ite(att_SC5_E4, -acc_SC5, TRUE)
impl_E4_SC4 = ite(att_SC4_E4, -acc_SC4, TRUE)
impl_E4_E3 = ite(att_E3_E4, -acc_E3, TRUE)
impl_E4_M4 = ite(att_M4_E4, -acc_M4, TRUE)
impl_E4_SC7 = ite(att_SC7_E4, -acc_SC7, TRUE)
impl_E4_SC2 = ite(att_SC2_E4, -acc_SC2, TRUE)
impl_E4_E2 = ite(att_E2_E4, -acc_E2, TRUE)
conjImpl_E4 = and(impl_E4_M2, impl_E4_M1, impl_E4_SC1, impl_E4_SC3, impl_E4_E5, impl_E4_SC6, impl_E4_RTP, impl_E4_ADAPTING, impl_E4_E1, impl_E4_E4, impl_E4_M3, impl_E4_SHAPING, impl_E4_SC5, impl_E4_SC4, impl_E4_E3, impl_E4_M4, impl_E4_SC7, impl_E4_SC2, impl_E4_E2, on_E4)
equiv_E4 = xor(-acc_E4, conjImpl_E4)
impl_E2_M2 = ite(att_M2_E2, -acc_M2, TRUE)
impl_E2_M1 = ite(att_M1_E2, -acc_M1, TRUE)
impl_E2_SC1 = ite(att_SC1_E2, -acc_SC1, TRUE)
impl_E2_SC3 = ite(att_SC3_E2, -acc_SC3, TRUE)
impl_E2_E5 = ite(att_E5_E2, -acc_E5, TRUE)
impl_E2_SC6 = ite(att_SC6_E2, -acc_SC6, TRUE)
impl_E2_RTP = ite(att_RTP_E2, -acc_RTP, TRUE)
impl_E2_ADAPTING = ite(att_ADAPTING_E2, -acc_ADAPTING, TRUE)
impl_E2_E1 = ite(att_E1_E2, -acc_E1, TRUE)
impl_E2_E4 = ite(att_E4_E2, -acc_E4, TRUE)
impl_E2_M3 = ite(att_M3_E2, -acc_M3, TRUE)
impl_E2_SHAPING = ite(att_SHAPING_E2, -acc_SHAPING, TRUE)
impl_E2_SC5 = ite(att_SC5_E2, -acc_SC5, TRUE)
impl_E2_SC4 = ite(att_SC4_E2, -acc_SC4, TRUE)
impl_E2_E3 = ite(att_E3_E2, -acc_E3, TRUE)
impl_E2_M4 = ite(att_M4_E2, -acc_M4, TRUE)
impl_E2_SC7 = ite(att_SC7_E2, -acc_SC7, TRUE)
impl_E2_SC2 = ite(att_SC2_E2, -acc_SC2, TRUE)
impl_E2_E2 = ite(att_E2_E2, -acc_E2, TRUE)
conjImpl_E2 = and(impl_E2_M2, impl_E2_M1, impl_E2_SC1, impl_E2_SC3, impl_E2_E5, impl_E2_SC6, impl_E2_RTP, impl_E2_ADAPTING, impl_E2_E1, impl_E2_E4, impl_E2_M3, impl_E2_SHAPING, impl_E2_SC5, impl_E2_SC4, impl_E2_E3, impl_E2_M4, impl_E2_SC7, impl_E2_SC2, impl_E2_E2, on_E2)
equiv_E2 = xor(-acc_E2, conjImpl_E2)
uncertain = and(equiv_E3, equiv_E5, equiv_E1, equiv_E4, equiv_E2)
semantics = and(fixed, control, uncertain)
phiStIf = and(structure, semantics)
target = and(acc_RTP)
phiStSk = ite(phiStIf, target, TRUE)
main = or(phiStSk)

